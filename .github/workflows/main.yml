name: Frontend CI/CD - Módulo Gamificación

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    # ========== CHECKOUT Y SETUP ==========
    - name:  Checkout código
      uses: actions/checkout@v3
    
    - name:  Configurar Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name:  Instalar dependencias
      run: npm ci
    
    # ========== TESTS Y VALIDACIONES ==========
    - name: 🔍 Verificar linting
      run: npm run lint --if-present
      continue-on-error: true
    
    - name: Ejecutar tests
      run: npm test --if-present
      continue-on-error: true
      env:
        CI: true
    
    - name:  Verificar componentes de gamificación
      run: |
        echo " Verificando componentes del módulo:"
        test -f src/components/pages/agremiado/PuntosDialog.jsx && echo "✅ PuntosDialog.jsx" || echo "⚠️ PuntosDialog.jsx no encontrado"
        test -f src/components/pages/agremiado/LogrosDialog.jsx && echo "✅ LogrosDialog.jsx" || echo "⚠️ LogrosDialog.jsx no encontrado"
        test -f src/components/pages/agremiado/Perfil.jsx && echo "✅ Perfil.jsx" || echo "⚠️ Perfil.jsx no encontrado"
    
    # ========== BUILD ==========
    - name:  Generar build de producción
      run: npm run build
      env:
        CI: false
    
    - name:  Verificar tamaño del build
      run: |
        echo " Información del build:"
        du -sh build/
        echo " Archivos principales:"
        ls -lh build/static/js/*.js 2>/dev/null | head -5 || echo "No hay archivos JS"
        ls -lh build/static/css/*.css 2>/dev/null | head -5 || echo "No hay archivos CSS"
    
    
    - name:  Subir artefactos de build
      uses: actions/upload-artifact@v4
      with:
        name: build-production
        path: build/
        retention-days: 7
    
   # ========== DEPLOY ==========
    - name: Deploy a Hostinger via FTP
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./build/
        server-dir: /public_html/
        dangerous-clean-slate: true
