name: Frontend CI/CD - React App

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  NODE_VERSION: '20.x'

jobs:
  test-and-build:
    name: Test & Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Verify linting
      run: npm run lint --if-present
      continue-on-error: true
    
    - name: Run tests
      run: npm test --if-present
      continue-on-error: true
      env:
        CI: true
    
    - name: Verify gamification components
      run: |
        echo "Verificando componentes del modulo de gamificacion:"
        test -f src/components/pages/agremiado/PuntosDialog.jsx && echo "PuntosDialog.jsx encontrado" || echo "PuntosDialog.jsx no encontrado"
        test -f src/components/pages/agremiado/LogrosDialog.jsx && echo "LogrosDialog.jsx encontrado" || echo "LogrosDialog.jsx no encontrado"
        test -f src/components/pages/agremiado/Perfil.jsx && echo "Perfil.jsx encontrado" || echo "Perfil.jsx no encontrado"
    
    - name: Build production
      run: npm run build
      env:
        CI: false
    
    - name: Verify build output
      run: |
        echo "Informacion del build:"
        du -sh build/
        echo "Archivos principales generados:"
        ls -lh build/static/js/*.js 2>/dev/null | head -5 || echo "No hay archivos JS"
        ls -lh build/static/css/*.css 2>/dev/null | head -5 || echo "No hay archivos CSS"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: react-build-${{ github.sha }}
        path: build/
        retention-days: 7
        compression-level: 9
  
  deploy:
    name: Deploy to Hostinger
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build production
      run: npm run build
      env:
        CI: false
    
    - name: Deploy to Hostinger via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./build/
        server-dir: /public_html/
        dangerous-clean-slate: true
        timeout: 300000
    
    - name: Deployment summary
      run: |
        echo "================================"
        echo "Deployment completed successfully"
        echo "Site: https://sututeh.com"
        echo "Build hash: ${{ github.sha }}"
        echo "================================"
